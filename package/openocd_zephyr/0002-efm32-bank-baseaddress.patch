
Start address of a bank is always set to 0.

This prevents successful verification of data written to
a secondary bank, such as the bootloader bank for EFR32:

flash bank bootloader.flash efm32 0x0FE10000 0 0 0 $_TARGETNAME

See discussion on https://www.silabs.com/community/software/simplicity-studio/forum.topic.html/efm32_developmentde-LqeK

diff --git a/src/flash/nor/efm32.c b/src/flash/nor/efm32.c
index 245f856b5..20b19f498 100644
--- a/src/flash/nor/efm32.c
+++ b/src/flash/nor/efm32.c
@@ -961,7 +961,7 @@ static int efm32x_probe(struct flash_bank *bank)
 	struct efm32_info efm32_mcu_info;
 	int ret;
 	int i;
-	uint32_t base_address = 0x00000000;
+	//uint32_t base_address = 0x00000000;
 	char buf[256];
 
 	efm32x_info->probed = 0;
@@ -991,7 +991,7 @@ static int efm32x_probe(struct flash_bank *bank)
 		bank->sectors = NULL;
 	}
 
-	bank->base = base_address;
+	//bank->base = base_address;
 	bank->size = (num_pages * efm32_mcu_info.page_size);
 	bank->num_sectors = num_pages;
 
